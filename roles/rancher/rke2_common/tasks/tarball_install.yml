---
# Based off of https://get.rke2.io 's do_install_tar functon

# do_install_tar() {
#     setup_tmp
#     get_release_version
#     info "using ${INSTALL_RKE2_VERSION:-commit $INSTALL_RKE2_COMMIT} as release"
#     download_checksums
#     download_tarball
#     verify_tarball
#     unpack_tarball
# }

- name: "Check for binary tarball in {{ tenant_dir}}"
  ansible.builtin.stat:
    path: "{{ tenant_dir }}/rke2.linux-amd64.tar.gz"
  register: tarball_check
  delegate_to: 127.0.0.1
  become: false
#

- name: TARBALL | Make temp dir  -- This task will skip with -C and follow on tasks will fail.
  ansible.builtin.tempfile:
    state: directory
    suffix: rke2-install.XXXXXXXXXX
    path: "{{ tarball_tmp_dir | default(omit) }}"
  register: temp_dir

- name: Send provided tarball if available  -- This task will fail with -C
  ansible.builtin.copy:
    src: "{{ tenant_dir }}/rke2.linux-amd64.tar.gz"
    dest: "{{ temp_dir.path }}/rke2.linux-amd64.tar.gz"
    mode: '0644'
  when:
    - tarball_check.stat.exists
    - rke2_tarball_url == ""

- name: Determine if current version differs what what is being installed
  ansible.builtin.set_fact:
    rke2_version_changed: true
  when:
    - not rke2_binary_tarball_check.stat.exists
    - not installed or installed_rke2_version != rke2_full_version

- name: TARBALL | Download the tarball
  ansible.builtin.get_url:
    url: https://github.com/rancher/rke2/releases/download/{{ rke2_full_version }}/rke2.linux-amd64.tar.gz
    dest: "{{ temp_dir.path }}/rke2.linux-amd64.tar.gz"
    mode: "0644"
  when:
    - not rke2_binary_tarball_check.stat.exists
    - rke2_version_changed

- name: TARBALL | Install tar package
  ansible.builtin.package:
    name: tar
    state: present
  ignore_errors: true  # noqa ignore-errors

- name: Get version of provided tarball
  when:
    - rke2_binary_tarball_check.stat.exists
  block:
    - name: Unarchive tarball into temp location
      ansible.builtin.unarchive:
        src: "{{ temp_dir.path }}/rke2.linux-amd64.tar.gz"
        dest: "{{ temp_dir.path }}"
        remote_src: true

    - name: Get tarball RKE2 version from temp location
      ansible.builtin.shell: set -o pipefail && {{ temp_dir.path }}/bin/rke2 -v | awk '$1 ~ /rke2/ { print $3 }'
      register: tarball_rke2_version_tmp
      changed_when: false
      args:
        executable: /usr/bin/bash

    - name: Set tarball RKE2 version var
      ansible.builtin.set_fact:
        tarball_rke2_version: "{{ tarball_rke2_version_tmp.stdout }}"

    - name: Determine if current version differs what what is being installed
      ansible.builtin.set_fact:
        rke2_version_changed: true
      when:
        - not installed or installed_rke2_version != tarball_rke2_version

- name: TARBALL | Check Target Mountpoint
  ansible.builtin.command: mountpoint -q {{ tarball_dir }}
  register: tarball_dir_stat
  failed_when: false
  changed_when: false

- name: TARBALL | tarball_dir is a mountpoint setting dir to /opt/rke2
  ansible.builtin.set_fact:
    tarball_dir: "/opt/rke2"
  when: tarball_dir_stat.rc == 0

- name: TARBALL | Using /opt/rke2
  ansible.builtin.debug:
    msg: "Using /opt/rke2 for install directory"
  when: tarball_dir_stat.rc == 0

- name: TARBALL | Create {{ tarball_dir }}
  ansible.builtin.file:
    path: "{{ tarball_dir }}"
    state: directory
    recurse: true
  when: tarball_dir is defined

- name: Final extraction/installation of RKE2 Tar
  when:
    - rke2_version_changed
  block:

    - name: Unarchive rke2 tar
      ansible.builtin.unarchive:
        src: "{{ temp_dir.path }}/rke2.linux-amd64.tar.gz"
        dest: "{{ tarball_dir }}"
        remote_src: true

    - name: TARBALL | Updating rke2-server.service
      ansible.builtin.replace:
        path: "{{ tarball_dir }}/lib/systemd/system/rke2-server.service"
        regexp: '/usr/local'
        replace: '{{ tarball_dir }}'

    - name: TARBALL | Updating rke2-agent.service
      ansible.builtin.replace:
        path: "{{ tarball_dir }}/lib/systemd/system/rke2-agent.service"
        regexp: '/usr/local'
        replace: '{{ tarball_dir }}'

    - name: TARBALL | Updating rke2-uninstall.sh
      ansible.builtin.replace:
        path: "{{ tarball_dir }}/bin/rke2-uninstall.sh"
        regexp: '/usr/local'
        replace: '{{ tarball_dir }}'

    - name: TARBALL | Moving Systemd units to /etc/systemd/system
      ansible.builtin.copy:
        src: "{{ tarball_dir }}/lib/systemd/system/rke2-server.service"
        dest: /etc/systemd/system/rke2-server.service
        mode: '0644'
        owner: root
        group: root
        remote_src: yes
      when:
        - inventory_hostname in groups['rke2_servers']

    - name: TARBALL | Moving Systemd units to /etc/systemd/system
      ansible.builtin.copy:
        src: "{{ tarball_dir }}/lib/systemd/system/rke2-server.env"
        dest: /etc/systemd/system/rke2-server.env
        mode: '0644'
        owner: root
        group: root
        remote_src: yes
      when:
        - inventory_hostname in groups['rke2_servers']

    - name: TARBALL | Moving Systemd units to /etc/systemd/system
      ansible.builtin.copy:
        src: "{{ tarball_dir }}/lib/systemd/system/rke2-agent.service"
        dest: /etc/systemd/system/rke2-agent.service
        mode: '0644'
        owner: root
        group: root
        remote_src: yes
      when:
        - inventory_hostname in groups.get('rke2_agents', [])

    - name: TARBALL | Moving Systemd units to /etc/systemd/system
      ansible.builtin.copy:
        src: "{{ tarball_dir }}/lib/systemd/system/rke2-agent.env"
        dest: /etc/systemd/system/rke2-agent.env
        mode: '0644'
        owner: root
        group: root
        remote_src: yes
      when:
        - inventory_hostname in groups.get('rke2_agents', [])

    - name: TARBALL | Refreshing systemd unit files
      ansible.builtin.systemd:
        daemon-reload: yes

- name: Remove the temp_dir
  ansible.builtin.file:
    path: "{{ temp_dir.path }}"
    state: absent
  when: temp_dir.path is defined
