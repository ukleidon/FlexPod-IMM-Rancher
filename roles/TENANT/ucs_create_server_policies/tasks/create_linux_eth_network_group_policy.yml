---
- name: "Configure Ethernet Network Group Policy for Mgmt and NFS Access"
  vars:
    access_vlan_id: "{{ t_access_vlan_id }}|int"
    api_info: &api_info_mgmt
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
      state: "{{ state | default(omit) }}"

  cisco.intersight.intersight_rest_api:
    <<: *api_info_mgmt
    resource_path: /fabric/EthNetworkGroupPolicies
    query_params:
       $filter: "Name eq '{{ name_of_network_group_policy_for_management }}'"
    api_body: {
      "Name": "{{ name_of_network_group_policy_for_management }}",
      "Description": "{{ description_of_network_group_policy_for_management }}",

      "Organization": {
         "Moid": "{{ intersight_org.api_response.Moid }}"
       },
      Tags: [{Key: "configmode", Value: "ansible"},{Key: "prefix", Value: "{{ prefix }}"}],
      "VlanSettings": {
         "NativeVlan": "{{ native_vlan_id }}",
         "AllowedVlans": "{{ t_ib_vlan_id }},{{ t_access_vlan_id }}"
         }
      }
  register: mgmt_network_group_policy

- name: "Configure Ethernet Network Group Policy for Access"
  vars:
    api_info: &api_info_access
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
      state: "{{ state | default(omit) }}"

  cisco.intersight.intersight_rest_api:
    <<: *api_info_access
    resource_path: /fabric/EthNetworkGroupPolicies
    query_params:
       $filter: "Name eq '{{ name_of_network_group_policy_for_access }}'"
    api_body: {
      "Name": "{{ name_of_network_group_policy_for_access }}",
      "Description": "{{ description_of_network_group_policy_for_access }}",

      "Organization": {
         "Moid": "{{ intersight_org.api_response.Moid }}"
       },
      Tags: [{Key: "configmode", Value: "ansible"},{Key: "prefix", Value: "{{ prefix }}"}],
      "VlanSettings": {
         "NativeVlan": "{{ native_vlan_id }}",
         "AllowedVlans": "{{ t_access_vlan_id }},{{ t_ib_vlan_id }}"
         }
      }
  register: access_network_group_policy


- name: "LINUX: Configure Ethernet Network Group Policy for Storage access"
  vars:
    api_info: &api_info_storage
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
      state: "{{ state | default(omit) }}"

  cisco.intersight.intersight_rest_api:
    <<: *api_info_storage
    resource_path: /fabric/EthNetworkGroupPolicies
    query_params:
       $filter: "Name eq '{{ name_of_network_group_policy_for_storage }}'"
    api_body: {
      "Name": "{{ name_of_network_group_policy_for_storage }}",
      "Description": "{{ description_of_network_group_policy_storage }}",

      "Organization": {
         "Moid": "{{ intersight_org.api_response.Moid }}"
       },
      Tags: [{Key: "configmode", Value: "ansible"},{Key: "prefix", Value: "{{ prefix }}"}],
      "VlanSettings": {
         "NativeVlan": "{{ t_nfs_vlan_id }}",
         "AllowedVlans": "{{ t_iscsiA_vlan_id }},{{ t_iscsiB_vlan_id }},{{ t_nfs_vlan_id }}"
         }
      }
  register: storage_network_group_policy

- name: "LINUX: Configure Ethernet Network Group Policy for WAN access"
  vars:
    api_info: &api_info_wan
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
      state: "{{ state | default(omit) }}"

  cisco.intersight.intersight_rest_api:
    <<: *api_info_wan
    resource_path: /fabric/EthNetworkGroupPolicies
    query_params:
       $filter: "Name eq '{{ name_of_network_group_policy_for_wan }}'"
    api_body: {
      "Name": "{{ name_of_network_group_policy_for_wan }}",
      "Description": "{{ description_of_network_group_policy_wan }}",

      "Organization": {
         "Moid": "{{ intersight_org.api_response.Moid }}"
       },
      Tags: [{Key: "configmode", Value: "ansible"},{Key: "prefix", Value: "{{ prefix }}"}],
      "VlanSettings": {
         "NativeVlan": "{{ native_vlan_id }}",
         "AllowedVlans": "{{ t_wan_vlan_id }},{{ t_ib_vlan_id }}"
         }
      }
  register: wan_network_group_policy


- name: "LINUX: Configure Ethernet Network Group Policy for iSCSI-A"
  vars:
    api_info: &api_info_iscsi_a
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
      state: "{{ state | default(omit) }}"

  cisco.intersight.intersight_rest_api:
    <<: *api_info_iscsi_a
    resource_path: /fabric/EthNetworkGroupPolicies
    query_params:
       $filter: "Name eq '{{ name_of_network_group_policy_for_iscsi_a }}'"
    api_body: {
      "Name": "{{ name_of_network_group_policy_for_iscsi_a }}",
      "Description": "{{ description_of_network_group_policy_for_iscsi_a }}",

      "Organization": {
         "Moid": "{{ intersight_org.api_response.Moid }}"
       },
      Tags: [{Key: "configmode", Value: "ansible"},{Key: "prefix", Value: "{{ prefix }}"}],
      "VlanSettings": {
         "NativeVlan": "{{ t_iscsiA_vlan_id }}",
         "AllowedVlans": "{{ t_iscsiA_vlan_id|int }}"
         }
      }
  register: iscsi_a_network_group_policy
  when: (configure_iscsi == 'true') and (configure_nvme_tcp != 'true')

- name: "LINUX: Configure Ethernet Network Group Policy for iSCSI-A with NVMe-TCP-A"
  vars:
    api_info: &api_info_iscsi_a_w_nvme_tcp_a
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
      state: "{{ state | default(omit) }}"

  cisco.intersight.intersight_rest_api:
    <<: *api_info_iscsi_a_w_nvme_tcp_a
    resource_path: /fabric/EthNetworkGroupPolicies
    query_params:
       $filter: "Name eq '{{ name_of_network_group_policy_for_iscsi_a }}'"
    api_body: {
      "Name": "{{ name_of_network_group_policy_for_iscsi_a }}",
      "Description": "{{ description_of_network_group_policy_for_iscsi_a }}",

      "Organization": {
         "Moid": "{{ intersight_org.api_response.Moid }}"
       },
      Tags: [{Key: "configmode", Value: "ansible"},{Key: "prefix", Value: "{{ prefix }}"}],
      "VlanSettings": {
         "NativeVlan": "{{ t_iscsiA_vlan_id }}",
         "AllowedVlans": "{{ t_iscsiA_vlan_id }},{{ nvme_tcpA_vlan_id }}"
         }
      }
  register: iscsi_nvme_a_network_group_policy
  when: (configure_iscsi == 'true') and (configure_nvme_tcp == 'true')

- name: "LINUX: Configure Ethernet Network Group Policy for iSCSI-B"
  vars:
    api_info: &api_info_iscsi_b
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
      state: "{{ state | default(omit) }}"

  cisco.intersight.intersight_rest_api:
    <<: *api_info_iscsi_b
    resource_path: /fabric/EthNetworkGroupPolicies
    query_params:
       $filter: "Name eq '{{ name_of_network_group_policy_for_iscsi_b }}'"
    api_body: {
      "Name": "{{ name_of_network_group_policy_for_iscsi_b }}",
      "Description": "{{ description_of_network_group_policy_for_iscsi_b }}",

      "Organization": {
         "Moid": "{{ intersight_org.api_response.Moid }}"
       },
      Tags: [{Key: "configmode", Value: "ansible"},{Key: "prefix", Value: "{{ prefix }}"}],
      "VlanSettings": {
         "NativeVlan": "{{ t_iscsiB_vlan_id }}",
         "AllowedVlans": "{{ t_iscsiB_vlan_id|int }}"
         }
      }
  register: iscsi_b_network_group_policy
  when: configure_iscsi == 'true' and (configure_nvme_tcp != 'true')

- name: "LINUX: Configure Ethernet Network Group Policy for iSCSI-B with NVMe-TCP-B"
  vars:
    api_info: &api_info_iscsi_b_w_nvme_tcp_b
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
      state: "{{ state | default(omit) }}"

  cisco.intersight.intersight_rest_api:
    <<: *api_info_iscsi_b_w_nvme_tcp_b
    resource_path: /fabric/EthNetworkGroupPolicies
    query_params:
       $filter: "Name eq '{{ name_of_network_group_policy_for_iscsi_b }}'"
    api_body: {
      "Name": "{{ name_of_network_group_policy_for_iscsi_b }}",
      "Description": "{{ description_of_network_group_policy_for_iscsi_b }}",

      "Organization": {
         "Moid": "{{ intersight_org.api_response.Moid }}"
       },
      Tags: [{Key: "configmode", Value: "ansible"},{Key: "prefix", Value: "{{ prefix }}"}],
      "VlanSettings": {
         "NativeVlan": "{{ t_iscsiB_vlan_id }}",
         "AllowedVlans": "{{ t_iscsiB_vlan_id }},{{ nvme_tcpB_vlan_id }}"
         }
      }
  register: iscsi_nvme_b_network_group_policy
  when: (configure_iscsi == 'true') and (configure_nvme_tcp == 'true')
