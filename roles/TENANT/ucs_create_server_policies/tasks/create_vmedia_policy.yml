---
- name: "Configure Virtual Media Policy CD only"
  vars:
    api_info: &api_info
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
      state: "{{ state | default(omit) }}"

  cisco.intersight.intersight_rest_api:
    <<: *api_info
    resource_path: /vmedia/Policies
    query_params:
       $filter: "Name eq '{{ name_of_vmedia_policy }}'"
    api_body: {
        "Name": "{{ name_of_vmedia_policy }}",
        "Description": "{{ description_of_vmedia_policy }}",
        "Enabled": true,
        "Encryption": true,
        "LowPowerUsb": true,
        "Mappings": [
            {
                "AuthenticationProtocol": "none",
                "ClassId": "vmedia.Mapping",
                "DeviceType": "{{ vmedia_device_type_cdd }}",
                "FileLocation": "{{ vmedia_file_location_cdd }}",
                "HostName": "",
                "IsPasswordSet": false,
                "MountOptions": "",
                "MountProtocol": "{{ vmedia_protocol }}",
                "ObjectType": "vmedia.Mapping",
                "RemoteFile": "",
                "RemotePath": "",
                "Username": "",
                "VolumeName": "{{ vmedia_name_cdd }}"
            }
        ],
        "Organization": {
           "Moid": "{{ intersight_org.api_response.Moid }}"
         },
        Tags: [{Key: "configmode", Value: "ansible"},{Key: "prefix", Value: "{{ prefix }}"}]
     }
  register: vmedia_policy
  when: vmedia_file_location_hdd is not defined

- name: "Configure Virtual Media Policy CDD and HDD"
  vars:
    api_info: &api_info_hdd
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
      state: "{{ state | default(omit) }}"

  cisco.intersight.intersight_rest_api:
    <<: *api_info_hdd
    resource_path: /vmedia/Policies
    query_params:
       $filter: "Name eq '{{ name_of_vmedia_policy }}'"
    api_body: {
        "Name": "{{ name_of_vmedia_policy }}",
        "Description": "{{ description_of_vmedia_policy }}",
        "Enabled": true,
        "Encryption": true,
        "LowPowerUsb": true,
        "Mappings": [
            {
                "AuthenticationProtocol": "none",
                "ClassId": "vmedia.Mapping",
                "DeviceType": "{{ vmedia_device_type_cdd }}",
                "FileLocation": "{{ vmedia_file_location_cdd }}",
                "HostName": "",
                "IsPasswordSet": false,
                "MountOptions": "",
                "MountProtocol": "{{ vmedia_protocol }}",
                "ObjectType": "vmedia.Mapping",
                "RemoteFile": "",
                "RemotePath": "",
                "Username": "",
                "VolumeName": "{{ vmedia_name_cdd }}"
            },
            {
                "AuthenticationProtocol": "none",
                "ClassId": "vmedia.Mapping",
                "DeviceType": "{{ vmedia_device_type_hdd }}",
                "FileLocation": "{{ vmedia_file_location_hdd }}",
                "HostName": "",
                "IsPasswordSet": false,
                "MountOptions": "",
                "MountProtocol": "{{ vmedia_protocol }}",
                "ObjectType": "vmedia.Mapping",
                "RemoteFile": "",
                "RemotePath": "",
                "Username": "",
                "VolumeName": "{{ vmedia_name_hdd }}"
            }
        ],
        "Organization": {
           "Moid": "{{ intersight_org.api_response.Moid }}"
         },
        Tags: [{Key: "configmode", Value: "ansible"},{Key: "prefix", Value: "{{ prefix }}"}]
     }
  register: vmedia_policy
  when: vmedia_file_location_hdd is defined
