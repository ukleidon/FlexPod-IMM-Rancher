---
# Create  server policies specific to Converged Infrastrucure stack
- name: "Create IMM Server Policies"
  vars:
    api_info: &api_info_org_moid
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
      state: "{{ state | default(omit) }}"
  intersight_rest_api:
    <<: *api_info_org_moid
    resource_path: /organization/Organizations
    query_params:
      $filter: "Name eq '{{ org_name }}'"
  register: intersight_org
  delegate_to: localhost
  tags: always
  run_once: true

# Collect information on existence of Boot Order Policy, LAN Connectivity Policy, and
# SAN Connectivity Policy
- include_tasks: gather_policy_info.yml

# Collect information about various pools
- include_tasks: gather_pool_info.yml

- include_tasks: create_linux_eth_network_group_policy.yml
# Create Bios Policy
- include_tasks: create_bios_policies.yml
  when: os_type == 'vmware'
- include_tasks: create_linux_bios_policies.yml
  when: os_type == 'linux'
- include_tasks: create_windows_bios_policies.yml
  when: os_type == 'windows'

# Create IMC Access Policy
- include_tasks: create_imc_policy.yml

# Create KVM Policy
- include_tasks: create_kvm_policy.yml

# Create vMedia Policy
- include_tasks: create_vmedia_policy.yml

# Create Boot Order Policy for Fibre Channel or iSCSI Boot
- include_tasks: create_boot_order_policy.yml
  when: ((configure_iscsi == 'true') and (iscsi_boot_order_policy_details.api_response.Moid is not defined)) or ((configure_fc == 'true') and (fc_boot_order_policy_details.api_response.Moid is not defined)) or (configure_local == 'true')

# Create IPMI over LAN Policy to enable IPMI over LAN
- include_tasks: create_ipmi_policy.yml

# Create Local User Policy to allow KVM Access
- include_tasks: create_local_user_policy.yml

# Create Ethernet QoS Policy
- include_tasks: create_ethernet_qos_policy.yml

# Create Ethernet Network Control Policy
- include_tasks: create_ethernet_network_control_policy.yml

# Create VMware and High Traffic Ethernet Adapter Policy
- include_tasks: create_ethernet_adapter_policies.yml
  when: os_type == 'vmware'
- include_tasks: create_linux_adapter_policies.yml
  when: os_type == 'linux'
- include_tasks: create_windows_adapter_policies.yml
  when: os_type == 'windows'

# Create Ethernet Network Group Policy - VLAN details for vNICs assigned for Management/NFS/vMotion/iSCSI
- include_tasks: create_linux_eth_network_group_policy.yml
  when: (os_type == 'linux')
- include_tasks: create_windows_eth_network_group_policy.yml
  when: (os_type == 'windows')
- include_tasks: create_ethernet_network_group_policy.yml
  when: (os_type == 'vmware')

#Configure iSCSI Adapter Policy if iSCSI is being configured
- include_tasks: create_iscsi_adapter_policy.yml
  when: configure_iscsi == 'true'

# Configure iSCSI Target Policy for boot from SAN if iSCSI is being configured
- include_tasks: create_iscsi_target_policy.yml
  when: configure_iscsi == 'true'

# Configure iSCSI Boot Policy (for boot from SAN) if iSCSI is being configured
- include_tasks: create_iscsi_boot_policy.yml
  when: configure_iscsi == 'true'

# Configure LAN Connectivity Policy if Local boot is being configured
- include_tasks: create_linux_bond_connectivity_policy.yml
  when: (configure_local == 'true') and (os_type == 'linux') and (os_bond == 'true') and (lan_connectivity_policy_details.api_response.Moid is not defined)
- include_tasks: create_linux_lan_connectivity_policy.yml
  when: (configure_local == 'true') and (os_type == 'linux') and (os_bond == 'false') and (lan_connectivity_policy_details.api_response.Moid is not defined)

# Configure iSCSI LAN Connectivity Policy if iSCSI is being configured
- include_tasks: create_linux_iscsi_lan_connectivity_policy.yml
  when: (configure_iscsi == 'true') and (os_type == 'linux') and (os_bond == 'false')
- include_tasks: create_linux_iscsi_bond_lan_connectivity_policy.yml
  when: (configure_iscsi == 'true') and (os_type == 'linux') and (os_bond == 'true')
- include_tasks: create_windows_iscsi_lan_connectivity_policy.yml
  when: (configure_iscsi == 'true') and (os_type == 'windows')
- include_tasks: create_iscsi_lan_connectivity_policy.yml
  when: (configure_iscsi == 'true') and (os_type == 'vmware') and (iscsi_lan_connectivity_policy_details.api_response.Moid is not defined)
  
# Configure FC LAN Connectivity Policy if FC is being configured
- include_tasks: create_linux_fc_lan_connectivity_policy.yml
  when: (configure_fc == 'true') and (os_type == 'linux')
- include_tasks: create_windows_fc_lan_connectivity_policy.yml
  when: (configure_fc == 'true') and (os_type == 'windows')
- include_tasks: create_fc_lan_connectivity_policy.yml
  when: (configure_fc == 'true') and (os_type == 'vmware') and (fc_lan_connectivity_policy_details.api_response.Moid is not defined)
  
# Configure FC Network Policy
- include_tasks: create_fc_network_policy.yml
  when: configure_fc == 'true'

# Fibre Channel Qos Policy
- include_tasks: create_fc_qos_policy.yml
  when: configure_fc == 'true'

# Fibre Channel Adapter Policies
- include_tasks: create_fc_adapter_policy.yml
  when: configure_fc == 'true'
- include_tasks: create_fc_nvme_initiator_adapter_policy.yml
  when: configure_fc_nvme == 'true'

# SAN connectivity Policy
- include_tasks: create_linux_san_connectivity_policy.yml
  when: (configure_fc == 'true') and (os_type == 'linux')
- include_tasks: create_windows_san_connectivity_policy.yml
  when: (configure_fc == 'true') and (os_type == 'windows')
- include_tasks: create_san_connectivity_policy.yml
  when: (configure_fc == 'true') and (os_type == 'vmware') and (san_connectivity_policy_details.api_response.Moid is not defined)
